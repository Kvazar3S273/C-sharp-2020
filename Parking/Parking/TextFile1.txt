Написати систему обліку автомобілів на парковці

Головне меню дає можливість:
    Авторизуватися парковщику
        почати зміну (ввести ім'я)
        або 
        завершити зміну 
    
    Працювати парковщику (авторизованому):
        поставити автомобіль на парковку, якщо є вільні місця
        випустити автомобіль з конкретного парковочного місця
        подивитися стан парковки (зайняті / вільні місця : у вигляді таблиці, або у вигляді схеми)
        подивитися статистику штрафів


При виїзді автомобіля виписується квитанція, котра містить 
    модель, колір і номер автомобіля
    оплачений час парковки
    реальний час парковки
    сума штрафу за "перестій" (автомобіль перебував на парковці довше, ніж оплачено)
    ім'я парковщика

    


Клас Car 
~~~~~~~~~
Описує автомобіль на стоянці
    знає:
        - модель
        - колір
        - номер ( AB 1234 CD )
        - час перебування на парковці ( об'єкт класу Timer )
    вміє:
        - повідомити модель
        - повідомити колір
        - повідомити номер
        - повідомити час перебування на парковці ( об'єкт класу Timer )
        
    Конструктор по замовчуванню генерує рандомні характеристики автомобіля
    і може приймати оплачений час парковки (або генерувати його рандомно)
        

        
Клас Timer
~~~~~~~~~~
Зберігає часові характеристики перебування автомобіля на парковці
та надає інформацію про час "перестою"
    знає:
        - час заїзду 
        - час виїзду 
        - оплачений час
    вміє:
        + повідомити тривалість оплаченого часу (хвилин)
        + повідомити тривалість "перестою" (хвилин)
          (або 0, якщо в межах оплаченого часу)
    Конструктор по замовчуванню генерує рандомні значення (контролювати: час виїзду більший часу заїзду )
    Оплачений час може, як генеруватися радномно, так і прийматися параметром конструктора
    Внутрішнє представлення часу - на ваш вибір, але "назовні" час видається у хвилинах



            
Клас Ticket
~~~~~~~~~~~
Квитанція про перебування на парковці.
Квитанція виписується (створюється об'єкт) парковщиком ( об'єкт класу Parker)
і ним же реєструється (зберігається вказівник) у "Бухгалтерській книзі парковки" (об'єкт класу ParkingBook)
    знає:
        про автомобіль, що виїхав з парковки
        - модель
        - колір
        - номер
        - час заїзду 
        - час виїзду 
        - оплачений час
        - реально використаний час
        - тривалість "перестою"
        - суму стягнутого штрафу
        - ім'я парковщика, що виписав квитанцію
    вміє:
        + нарахувати суму штрафу в момент виписки (в конструкторі)
            ( в конструктор передається вказівник на автомобіль, що виїжджає
            ( з нього Ticket і "витягує" усю потрібну інформацію.
            ( Штраф нараховується у розмірі: 
            (     25 грн. за першу повну чи неповну годину "перестою"
            (     10 грн. за кожну наступну повну чи неповну годину "перестою"
            (    дуже добре було би передбачити можливість змінювати розміри штрафів
            (    тобто ці дві цифри зберігати у статичних полях класу 
            (    і написати статичний метод їх зміни
        + видавати інформацію, потрібну для статистики (ґéтери)
        + друкувати себе у вигляді квитанції (на екрані)
        


Клас ParkingBook
~~~~~~~~~~~~~~~~
"Бухгалтерська книга парковки" - єдиний екземпляр
зберігає інформацію про роботу парковки
та надає статистику роботи парковки
    знає:
        - к-ть парковочних місць
        - інфу про кожне парковочне місце
           (масив фіксованого розміру вказвників на об'єкти Car. 
           (Коже елемент масиву - парковочне місце 
           (нульовий вказівник - місце вільне
           (вказівник на Car - місце зайняте цим автомобілем
        - виписані квитанції
           ( масив змінного розміру вказівників на об'єкти Ticket
           ( при виписці квитанції до масиву додається новий
    вміє:
        + повідомити наявність вільних місць
        + зареєструвати зайняття автомобілем вільного парковочного місця (приймає вказівник на об'єкт Car, що стає на це місце)
        + зареєструвати звільнення парковочного місця ( повертає вказівник на об'єкт Car, що там стояв )
        + зареєструвати виписану квитанцію
        + показати на екрані статистику зайнятих і вільних місць на даний момент
        + показати фінансову статистику: 
            кількість проданого часу, 
            кількість перевищеного часу,
            сума стягнутих штрафів за "перестій"

            
Клас Parker
~~~~~~~~~~~
"Парковщик" - може бути декілька (позмінно ) - 
Оперує іншими об'єктами програми
    знає:
        - "Бухгалтерську книгу" (об'єкт ParkingBook), з якою працює
        - своє ім'я, яким підписує квитанції
    вміє:
        + прийняти і обробити запит на заїзд на парковку 
            ( питає ParkingBook , чи є вільне місце
            (    якщо місце є, створює новий об'єкт Car і реєструє його у ParkingBook 
            (        ( можливо, запитує, яка планується тривалсть парковки (оплачений час) )
            (        та повертає true як підтвердження постановки автомобіля на парковку
            (    якщо місця немає -- повертає false
        + прийняти і обробити запит на виїзд автомобіля з конкретного парковочного місця
            ( реєструє у ParkingBook звільнення місця ( ParkingBook повертає вказівник на об'єкт Car, що там стояв )
            ( виписує квитанцію (об'єкт класу Ticket) та реєструє її у ParkingBook
            ( знищує об'єкт Car, одержаний від ParkingBook
       
Додати реалізацію наступних функціональних можливостей: 
виводу інформації про всі зареєстровані автомобілі, використовуючи доступ по індексу авто в масиві;
отримання посилання на авто по певній ознаці або їх комбінації. 
При цьому ключ (ключі) пошуку вказуються через оператор індексування. 